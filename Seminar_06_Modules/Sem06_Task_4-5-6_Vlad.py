_result = {}

def puzzle_game(
        puzzle: str,
        puzzle_answers: set[str],
        attempts: int
    ) -> int:
    """
    = Создайте модуль с функцией внутри.
    = Функция получает на вход загадку, список с возможными
    вариантами отгадок и количество попыток на угадывание.
    = Программа возвращает номер попытки, с которой была
    отгадана загадка или ноль, если попытки исчерпаны.
    """
    print(puzzle)
    for attempt in range(attempts):
        user_answer = input("Your answer: ")
        if user_answer.lower() in puzzle_answers:
            res = attempt+1
            break
    else:
        res = 0
    __save_result(puzzle=puzzle, attempts=res)
    return res

def __demo_game():
    """
    = Добавьте в модуль с загадками функцию, 
    которая хранит словарь множеств.
    = Ключ словаря - загадка, значение - список с отгадками.
    = Функция в цикле вызывает загадывающую функцию, чтобы
    передать ей все свои загадки
    """
    puzzles = {
        "Зимой и летом одним цветом": {"ель", "елка", "ёлка"}, 
        "Не лает, не кусает, а в дом не пускает": {"замок"},
        "Сидит дед во сто шуб одет": {"лук", "луковица"},
    }

    for p, ans in puzzles.items():
        puzzle_game(p, ans, 3)

def __save_result(puzzle: str, attempts: int):
    global _result
    _result[puzzle] = attempts

def show_results():
    print("!================!RESULTS!================!")
    for k, v in _result.items():
        print(k, v)

    """
    - Добавьте в модуль с загадками функцию, которая принимает на вход строку 
    (текст загадки) и число (номер попытки, с которой она угадана).
    - Функция формирует словарь с информацией о результатах отгадывания.
    - Для хранения используйте защищённый словарь уровня модуля.
    - Отдельно напишите функцию, которая выводит результаты
    угадывания из защищённого словаря в удобном для чтения виде.
    - Для формирования результатов используйте генераторное выражение.
    """

if __name__ == "__main__":
    __demo_game()
    show_results()